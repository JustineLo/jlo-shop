{
  "sort": {
    "label": "Sort by",
    "placeholder": "Choose one...",
    "priceLowHigh": "Price: Low to High",
    "priceHighLow": "Price: High to Low",
    "newest": "Newest",
    "latest": "Latest"
  },
  "priceFilter": {
    "label": "Price range",
    "to": "to"
  },
  "search": {
    "label": "Search"
  },
  "navbar": {
    "cart": "Cart"
  },
  "modal": {
    "addToCart": "Add to cart",
    "seeRepo": "See repo",
    "seeLive": "See live"
  },
  "checkout": {
    "empty": "Your cart is empty",
    "subtotal": "Subtotal",
    "vat": "VAT",
    "checkout": "Checkout",
    "addMore": "Add more projects",
    "clearCart": "Clear cart"
  },
  "readncollect": {
    "excerpt": "Transform articles into a knowledge collage. Extract, craft and export insights.",
    "description": "<p>The app lets users input article URLs, extracting the essential content. But it's not just another note-taking platform. Its magic lies in its unique collage feature. Users can merge, rearrange, and craft their notes into a personalized mosaic of knowledge. Think of it as a canvas where insights from various articles come together harmoniously.</p><p>But, what if you could hold this canvas in your hands? Recognizing the value of tangible insights, I integrated a feature allowing users to export their knowledge collages into a neatly organized PDF. It's not just an app; it's a solution tailored for the readers of the digital age.</p><h4>Tech Stack:</h4> <ul><li>Typescript: For a reliable frontend experience.</li><li>Python: Powering the backend for efficient data processing.</li></ul>"
  },
  "chaton": {
    "excerpt": "2D game developed with Unity and C#.",
    "description": "<p>Dive into the delightful world of Chaton, a 2D game where players navigate a whimsical cat through a rain of diamonds, ducks, and more. The objective is simple yet captivating: collect precious diamonds for the cat's sweetheart while dodging mischievous obstacles that can deter your journey.</p><h3>Highlights:</h3><ul><li>Dynamic gameplay mechanics with increasing difficulty and speed as you progress.</li><li>Engaging soundtracks and sound effects that immerse players into the gameplay.</li><li>High-score leaderboard to challenge and compete with friends.</li></ul><h3>Technological Stack:</h3><ul><li>Unity: As the primary game development platform.</li><li>C# for gameplay scripts and mechanics.</li></ul>"
  },
  "mistergoodbeer": {
    "excerpt": "Mobile app for beer enthusiasts",
    "description": "<h3>MisterGoodBeer App Contribution</h3><p>As a contributor to the MisterGoodBeer application, an engaging platform dedicated to assisting beer aficionados in discovering the nearest bars offering the most cost-effective pints, notable advancements were made on the frontend layer. Developed using the <strong>Flutter</strong> framework, the app not only ensures compatibility across both <strong>iOS and Android</strong> platforms but also boasts an impressive base of <strong>over 40,000 active users</strong>. Leveraging <strong>Firebase</strong> for its backend needs, the app promises efficient data handling and seamless user experience. While not being the original developer of the app, the input on the frontend has amplified its aesthetics, responsiveness, and user-centric features.</p>"
  },
  "voyageLudique": {
    "excerpt": "Boardgame exchange tracker",
    "description": "<p>Voyage Ludique is a dedicated platform designed to empower a board game community by streamlining the process of tracking a circulating collection of 70 games. As games change hands, members can effortlessly pinpoint their current location, ensuring transparency and accountability within the community.</p><h4>Tech Stack:</h4><ul><li>Frontend: React and TypeScript for a modern, scalable, and type-safe application.</li><li>Backend: Supabase for robust data management capabilities and seamless React integration.</li><li>Express: API backend for added flexibility and control.</li></ul><h4>Why It Stands Out:</h4><ul><li>Born from direct community engagement and meticulously tailored to their needs.</li><li>Showcases adaptability, technical proficiency, and genuine resonance with end-users.</li></ul>"
  },
  "searchHackerNews": {
    "excerpt": "Dynamic tool to explore tech-related articles",
    "description": "<h2>Search Hacker News: A Dynamic Search Tool</h2><p>A polished, interactive npm package offering a swift and user-centric search experience for delving into articles from the renowned platform, Hacker News.</p><h3>Highlights:</h3><ul><li>Intuitive integration with the Hacker News API ensuring users receive accurate and up-to-date results.</li><li>Dedicated story removal feature, catering for personalized reading lists.</li></ul><h3>Technological Stack:</h3><ul><li>React: Efficiently constructed UI components and managed state transitions.</li><li>Hacker News API: Tapped into a vast database of tech-related articles.</li><li>React-Reveal & React-Flip: Integrated for fluid animations and user interactivity.</li></ul>"
  },
  "banqueImages": {
    "excerpt": "Dynamic image bank with Unsplash API in React",
    "description": "<div class='project-description'><h2>Image Bank: An Interactive Image Bank</h2><p>Introducing a dynamic image bank powered by the Unsplash API, offering a user-friendly interface for searching and viewing high-resolution photos. The interactive interface is proficiently crafted using React.</p><h3>Key Highlights:</h3><ul><li>Seamless integration with the Unsplash API, facilitating the retrieval of quality images.</li><li>Features a comprehensive search function, allowing users to easily explore an extensive collection of images.</li><li>Optimized for user interaction, automatically loading new images as scrolling occurs, all accentuated by captivating reveal animations.</li></ul><h3>Technological Stack:</h3><ul><li>React: Utilized to build a responsive user interface and manage the application's state.</li><li>Unsplash API: Leveraged to provide a rich collection of images.</li><li>React-Reveal: Integrated to enhance UX with elegant animations.</li></ul><a href='https://justinelo-portfolio.netlify.app'>Learn More About Justine Lo's Portfolio</a></div>"
  },
  "markdownPreviewer": {
    "excerpt": "Intuitive, user-friendly tool for real-time markdown rendering.",
    "description": "<h2>Markdown Previewer: Dynamic Markdown Rendering Tool</h2><p>An intuitive, user-friendly tool crafted to facilitate real-time markdown rendering. With a seamless interface, users can effortlessly input their markdown content and instantly visualize its formatted version.</p><h3>Highlights:</h3><ul><li>Live markdown rendering that provides instant feedback to the user.</li><li>In-built help modal for markdown syntax, ensuring ease of use even for those unfamiliar with markdown.</li><li>Elegant animations using React-Reveal for enhanced user engagement.</li></ul><h3>Technological Stack:</h3><ul><li>React: For building a dynamic and responsive UI.</li><li>ReactMarkdown: To effectively translate markdown syntax into HTML content.</li><li>React-Reveal: Employed for smooth UI animations.</li></ul>"
  },
  "generateurDeCouleurs": {
    "excerpt": "Interactive color generator for gradient palette creation.",
    "description": "<h2>Color Generator: Customizable Color Palettes</h2><p>Dive into a universe of colors with this interactive color generator. This tool allows users to effortlessly create a gradient palette from a base color, offering inspiration and precise hex codes for design purposes.</p><h3>Highlights:</h3><ul><li>Dynamic color palette generation based on a user-defined base color.</li><li>Clickable colors that directly copy the hexadecimal value to the clipboard with a notification alert.</li><li>Smooth animations using React-Reveal to enhance user experience and interface appeal.</li></ul><h3>Technological Stack:</h3><ul><li>React: For a dynamic and responsive interface.</li><li>Values.js: To generate a variety of shades from the base color.</li><li>React-Reveal: Integrated for elegant UI transitions and effects.</li></ul>"
  },
  "tsSimpleModal": {
    "excerpt": "A lightweight, customizable modal component in TypeScript.",
    "description": "<p>Designed and published a lightweight, customizable modal component aimed at React applications, entirely written in TypeScript.</p><h3>Main Features:</h3><ul><li>Available as an NPM package, highlighting ease of integration and deployment across various React projects.</li><li>Written in TypeScript, ensuring type safety and an enhanced development experience.</li><li>Flexibility to determine modal visibility, close functions, and modal content.</li></ul><h3>Technological Stack:</h3><ul><li>TypeScript: Employed for static type checking and optimized performance.</li><li>React: Used to create the dynamic modal component.</li></ul>"
  },
  "lesPetitsPlats": {
    "excerpt": "Designing a recipe search engine for an established cookbook publisher",
    "description": "<p>Commissioned by an established cookbook publisher venturing into the digital space, the task was to design a robust and user-friendly recipe search engine. This engine is crafted to be highly responsive, initiating searches with only 3 characters entered by the user and updating results with every new keystroke.</p><p>The search functionality can be accessed via the main search field or through tags, including ingredients, utensils, and appliances. Results come from an intersection of queries, ensuring users receive recipes that match all selected tags.</p><p><strong>Technological Stack:</strong></p><ul><li>HTML5 (W3C Compliant)</li><li>CSS3</li><li>Vanilla JavaScript</li></ul><p>The project underscores a commitment to Green Code principles, security against HTML injections, and reusability.</p>"
  },
  "billed": {
    "excerpt": "Developed a reporting system for Billed to streamline reimbursement",
    "description": "<p>Engaged with Billed, a leading SaaS solutions provider for HR teams, the primary focus of this project was to debug the existing expense reporting system and enhance its stability. The responsibilities included:</p> <ul> <li>Debugging the existing code to ensure optimal performance.</li> <li>Writing unit tests to validate individual parts of the code.</li> <li>Creating integration tests to verify the interaction between different pieces of the application.</li> <li>Developing an end-to-end test plan to ensure the entire process works as intended.</li> </ul> <p>The debugging and testing processes were central to improving the system's reliability, security, and efficiency, aligning with Billed's commitment to a seamless user experience and robust architecture.</p>"
  },
  "kasa": {
    "excerpt": "Revamp of Kasa site from ASP.NET to Reac.",
    "description": "<p>Over a decade ago, the Kasa website was constructed using ASP.NET, but became burdened with outdated code.</p><p>The project's primary goal was to transfer the app to React, utilizing components and React Router routes, all in accordance with responsive Figma designs.</p><p>Key technical demands included the creation of modular, reusable React components, proper management of state and props, efficient handling of events, and more. React Router managed URL route parameters for each piece of housing data, with all router logic combined into a single file. The end result needed to be free of errors and warnings in the console.</p>"
  },
  "argentBank": {
    "excerpt": "Collaboration with Remede Agency for Argent Bank digital platform.",
    "description": "<p>Collaborating with Remede Agency, we crafted a digital platform for Argent Bank, an innovative player in the banking sector. Our mission was to provide clients with a user-friendly and seamless digital banking experience, covering everything from profile management to transaction oversight.</p><h3>Key Features:</h3><ul><li>User-friendly interface for banking services.</li><li>Secure login and profile management.</li><li>View, add, modify, or delete transaction information.</li></ul><h3>Technologies Used:</h3><ul><li>React: For responsive and interactive web design.</li><li>Redux: State management to ensure a smooth user experience.</li><li>Swagger: Documentation and organization of backend API.</li></ul>"
  },
  "HRnet": {
    "excerpt": "Revamping HRnet application from dated jQuery frontend.",
    "description": "<p>Engaged with WealthHealth's technology department to rejuvenate their internal HRnet web application, previously plagued with issues due to its dated jQuery frontend.</p><h3>Key Project Outcomes:</h3><ul><li>Transitioned entire HRnet project to a modern React framework.</li><li>Replaced four existing jQuery plugins with React components, improving overall functionality and UX.</li><li>Lighthouse performance tests conducted, displaying noticeable enhancement over the old version.</li></ul><h3>Technologies and Libraries Used:</h3><ul><li>React: For a responsive and dynamic user interface.</li><li>Material UI: A React UI framework for more interactive UI components.</li><li>Tanstack Table: Handling data in table format more efficiently.</li></ul>"
  },
  "SportSee": {
    "excerpt": "SportSee user profile revamp offering insights into training sessions.",
    "description": "<p>At SportSee, a booming sports coaching startup, the spotlight was on revamping the user profile page. This new iteration offers users insights into their completed training sessions and total calories burned.</p><p>Utilizing React for the profile page reconstruction, the project featured athletic activity graphs, tapping into Recharts library. </p><p>Backend development employed NodeJS, facilitating HTTP calls and serving mock data. To manage these calls, Fetch or Axios were preferred tools, organized outside React components into a dedicated service. Data modeling played a crucial role in ensuring API data was consistently formatted before use. The project documentation is complete and includes a Readme, JSDoc and proptypes.</p>"
  },
  "FishEye": {
    "excerpt": "A platform for independent photographers focused on accessibility",
    "description": "<p>FishEye, a platform dedicated to independent photographers showcasing their finest work, sought an overhaul of their decade-old website. The objective was to transition from a static to a dynamic and accessible site, making it a vibrant space for the artists. This prototype involved:</p><ul><li>Interactive media gallery with a like feature and sorting functionality.</li><li>A lightbox media viewer with keyboard navigation.</li><li>Contact form modal for users to reach out to photographers.</li></ul><p>The prime emphasis was on accessibility, ensuring that visually impaired users have a seamless experience. Semantic HTML elements, ARIA attributes, and image alt texts were meticulously integrated. Moreover, the code adheres to modern JavaScript standards, is ESLint validated, and perfectly readable by screen readers.</p>"
  },
  "Booki": {
    "excerpt": "Plateforme adaptative développée en utilisant uniquement HTML et CSS.",
    "description": "<p>Description : Conception et développement d'une plateforme web adaptative pour \"Booki\" offrant aux utilisateurs des options d'hébergements dans les villes de leur choix. Le projet a été entièrement réalisé en utilisant HTML et CSS, sans aucune collaboration.</p><ul><li><strong>Design Réactif :</strong> Intégration des designs du site pour ordinateur, tablette, et mobile, garantissant une expérience utilisateur fluide sur divers appareils.</li></ul><h3>Technologies Utilisées :</h3><ul><li>HTML & CSS : Utilisés pour la construction des composants frontend principaux tout en assurant un design réactif.</li></ul>"
  },
  "Ohmyfood": {
    "excerpt": "Application parfaitement responsive avec animations en pur CSS",
    "description": "<p>Description: Développement d'une plateforme 100% mobile pour \"Ohmyfood!\", une startup souhaitant révolutionner l'expérience culinaire. Le site répertorie les menus de restaurants gastronomiques, permettant aux utilisateurs de précomposer leurs repas pour un service rapide à leur arrivée.</p><ul><li><strong>Design Mobile-first:</strong> Garanti une expérience utilisateur mobile optimale en mettant en œuvre des designs réactifs pour tablettes et desktops.</li><li><strong>Animations Élégantes:</strong> Utilisation d'animations et de transitions CSS pour diverses interactions de l'interface utilisateur, y compris la sélection d'éléments de menu et un \"loading spinner\" personnalisé.</li></ul><h4>Technologies & Contraintes:</h4><ul><li>CSS & SASS: Développement du site sans frameworks, en utilisant SASS pour des capacités de stylisme améliorées.</li><li>Compatibilité: Assuré la compatibilité du site web avec les dernières versions desktop de Chrome et Firefox et passé les validations W3C.</li></ul>"
  },
  "GameOn": {
    "excerpt": "Amélioration de la fonctionnalité du formulaire d'inscription.",
    "description": "<p>Au sein de l'équipe de GameOn, une PME spécialisée dans les conférences et les concours de jeux, la responsabilité a été confiée de compléter et d'améliorer la fonctionnalité du formulaire d'inscription de l'application. Suite à des retours utilisateurs et à la transition d'un membre clé de l'équipe, le projet a été repris pour assurer une expérience utilisateur optimale.</p><ul><li>Implémentation de validations pour tous les champs du formulaire.</li><li>Ajout de messages de confirmation et d'erreur.</li></ul><h4>Technologies Utilisées:</h4><ul><li>HTML: Structure de base du formulaire.</li><li>CSS: Conception et mise en page du formulaire.</li><li>JavaScript: Pour rendre le formulaire interactif, ajouter des validations, des événements et des transitions.</li></ul><h4>Pourquoi Ce Projet:</h4><p>C'était une opportunité d'en savoir plus sur les subtilités de la conception de formulaires, la validation et la gestion des entrées utilisateur dans une application dynamique.</p>"
  }
}
